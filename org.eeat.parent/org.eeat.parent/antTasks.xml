<!-- Task definitions for the build toolkit ant tasks.
	Intended to be called from maven-antrun-plugin
-->

<project name="JazzTasks">

	<target name="setPaths" unless="jazzlib.dir">
		<property name="jazzlib.dir" value="C:/Program Files/maven" />
		<echo message="Jazz maven library path ${jazzlib.dir}" />
		<echo message="Jazz buildtoolkit path ${buildtoolkitpath}" />
	</target>

	<target name="startBuildActivity" depends="init">
		<echo message="Starting build activitty" />
	</target>


	<target name="artifactFilePublisher" if="filepath.present" unless="publish.skip" depends="init">
		<artifactFilePublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${user}" password="${user.password}" verbose="true" filePath="${filepath}" label="${label}" failOnError="false" />
	</target>

	<target name="artifactLinkPublisher" unless="publish.skip" depends="init">
		<!-- TODO -->
		<artifactLinkPublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${user}" password="${user.password}" verbose="true" filePath="${filepath}" label="${label}" failOnError="false" />
	</target>

	<target name="linkPublisher" unless="publish.skip" depends="init">
		
		<linkPublisher buildResultUUID="${buildResultUUID}" repositoryAddress="${repositoryAddress}" userId="${user}" password="${user.password}" verbose="true" url="${url}" label="${label}" failOnError="false" />
	</target>

	<target name="buildResultPublisher" if="filepath.present" unless="publish.skip" depends="init">
		<!-- Update the build progress in Jazz by setting the currentActivityLabel. -->
		<buildResultPublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${userId}" password="${password}" currentActivityLabel="{$label}" failOnError="false" />
	</target>

	<target name="logPublisher" unless="publish.skip" depends="init">
		<logPublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${userId}" password="${password}" filePath="${filepath}" label="${label}" failOnError="false" />
	</target>

	<target name="junitLogPublisher" unless="publish.skip" depends="init">
		<!-- Publisher.Skip the JUnit log to Jazz. JUnit results publish.skiped in this way are
			 shown on the JUnit tab of the build result editor. You must use the
			 junit task's formatter type=xml to get a junit xml log for publish.skiping. -->
		<junitLogPublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${userId}" password="${password}" filePath="${filepath}" />
	</target>

	<target name="filePublisher" if="filepath.present" unless="publish.skip" depends="init">
		<!-- This report will be shown in a separate tab in the Jazz build result editor. -->
		<filePublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${userId}" password="${password}" contributionTypeId="${contributionTypeId}" verbose="true" filePath="${filepath}" label="${label}" failOnError="false" />
	</target>

	<target name="jdtCompileLogPublisher" unless="publish.skip" depends="init">
		<jdtCompileLogPublisher buildResultUUID="${buildUUID}" repositoryAddress="${repositoryAddress}" userId="${user}" password="${user.password}" verbose="true" filePath="${filepath}" failOnError="false" />
	</target>

	<!-- Tasks for publish.skiping build results and build contributions. -->
	<target name="init" unless="publish.skip" depends="setPaths">
		<echo message="init pub: ${publish.skip}" />
		<available file="${filepath}" property="filepath.present" />

			<path id="jazzlib.classpath">
				<fileset dir="${jazzlib.dir}">
					<include name="buildtoolkit/*.jar" />
				</fileset>
			</path>

			<taskdef name="artifactFilePublisher" classname="com.ibm.team.build.ant.task.ArtifactFilePublisherTask">
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="artifactLinkPublisher" classname="com.ibm.team.build.ant.task.ArtifactLinkPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>
		
			<taskdef name="buildResultPublisher" classname="com.ibm.team.build.ant.task.BuildResultPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="filePublisher" classname="com.ibm.team.build.ant.task.FilePublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="jdtCompileLogPublisher" classname="com.ibm.team.build.ant.task.JdtCompileLogPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="junitLogPublisher" classname="com.ibm.team.build.ant.task.JUnitLogPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="linkPublisher" classname="com.ibm.team.build.ant.task.LinkPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="logPublisher" classname="com.ibm.team.build.ant.task.LogPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="workItemPublisher" classname="com.ibm.team.build.ant.task.WorkItemPublisherTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<!-- Tasks for enabling progress monitoring. -->

			<taskdef name="startBuildActivity" classname="com.ibm.team.build.ant.task.StartBuildActivityTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="completeBuildActivity" classname="com.ibm.team.build.ant.task.CompleteBuildActivityTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<!-- Tasks for controlling the build lifecycle. -->

			<taskdef name="startTeamBuild" classname="com.ibm.team.build.ant.task.StartBuildTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="completeTeamBuild" classname="com.ibm.team.build.ant.task.CompleteBuildTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="getNextTeamBuildRequest" classname="com.ibm.team.build.ant.task.GetNextBuildRequestTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="requestTeamBuild" classname="com.ibm.team.build.ant.task.RequestBuildTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<!-- Tasks for using Jazz SCM. -->

			<taskdef name="teamAccept" classname="com.ibm.team.build.ant.task.TeamAcceptTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>

			<taskdef name="teamFetch" classname="com.ibm.team.build.ant.task.TeamFetchTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>


			<taskdef name="teamLastModified" classname="com.ibm.team.build.ant.task.TeamLastModifiedTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>



			<!-- Miscellaneous tasks. -->

			<taskdef name="pluginOrganizer" classname="com.ibm.team.build.ant.task.PluginOrganizerTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>


			<taskdef name="waitForTeamBuild" classname="com.ibm.team.build.ant.task.WaitForTeamBuildTask" >
                <classpath>
                   <fileset dir="${buildtoolkitpath}">
                      <include name="*.jar" />
                   </fileset>
                </classpath>
			 </taskdef>


		</target>


	</project>
